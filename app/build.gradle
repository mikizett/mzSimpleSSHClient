/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'idea'
    id 'eclipse'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:deprecation']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

    // Pure Java Terminal Emulator, works with SSH and PTY
    implementation 'org.jetbrains.jediterm:jediterm-pty:2.42'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'com.google.guava:guava:23.6-jre'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'org.slf4j:slf4j-log4j12:1.7.32'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'

    // This package is a Java implementation of cryptographic algorithms.
    // This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 and up.
    implementation 'org.bouncycastle:bcprov-jdk15on:1.64'

    implementation 'com.hierynomus:sshj:0.35.0'

    implementation 'org.apache.commons:commons-lang3:3.0'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'

    // lombok
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
}

application {
    // Define the main class for the application.
    mainClass = 'com.mz.sshclient.mzSimpleSSHClientMain'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

